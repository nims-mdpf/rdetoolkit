name: Pytest and coverage measurement and create badges

on:
  pull_request:
    branches:
      - 'develop-*'
      - 'develop/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup uv (Python 3.11)
        uses: astral-sh/setup-uv@v2
        with:
          python-version: "3.11"
      - name: Cache uv
        uses: actions/cache@v3
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('requirements-dev.lock') }}
          restore-keys: uv-${{ runner.os }}-
      - name: Install dependencies (uv)
        run: |
          uv pip install --system -r requirements-dev.lock
          uv pip install --system -e .
          uv pip install --system coverage-badge
      - name: Run pytest
        run: python -m pytest --junitxml=pytest.xml --cov-report=term-missing --cov=src tests/
      - name: Generate coverage badge
        run: |
          coverage-badge -o docs/img/coverage.svg -f
      - name: Commit coverage badge
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/img/coverage.svg
          git add pytest.xml
          git add Cargo.lock
          git commit -m "chore: Update coverage badge" || echo "No changes to commit"
          git push origin HEAD || echo "No changes to push"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
